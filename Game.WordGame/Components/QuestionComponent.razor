<li class=@(Question.Answer != null ?"list-group-item" : "list-group-item bg-primary bg-opacity-25")>
    
    @if(Question.Answer == null)
    {
        if (IsOwner)
        {
            <span style="line-height: 2.4;"> @Question.Text </span>
            <span class="ms-3 float-end">
                <div class="btn-toolbar">
                    <div class="btn-group me-3">
                        <button type="button" class="btn btn-primary rounded-0 rounded-start" @onclick="@(() =>{ QuestionAnswered(true); if(remainingQuestionsNumbers == 0)OnStateIsSet.InvokeAsync(GameState.AwaitingResultAnnouncement); })">Yes</button>
                        <button type="button" class="btn btn-danger rounded-0 rounded-end" @onclick="@(() =>{ QuestionAnswered(false); if(remainingQuestionsNumbers == 0)OnStateIsSet.InvokeAsync(GameState.AwaitingResultAnnouncement); })">No</button>
                    </div>
                    <div class="btn-group">
                        <button type="button" class="btn btn-outline-primary" @onclick="@(() => { QuestionAnswered(true); OnStateIsSet.InvokeAsync(GameState.Won);})">Answer the game</button>
                    </div>
                </div>
            </span>
        } else
        {
            <span> @Question.Text </span>
            <span class="ms-3 float-end">Not yet answered!</span>
        }

    } else
    {
        <span> @Question.Text </span>
        <span class=@(Question.Answer == true ? "ms-3 float-end badge bg-primary px-3 py-1" : "ms-3 float-end badge bg-danger px-3 py-1")>@(Question.Answer == true ? "Yes" : "No")</span>
    }
</li>
@code {
    [Parameter]
    public Question Question { get; set; }

    [CascadingParameter(Name = "IsOwner")]
    public bool IsOwner { get; set; }

    [CascadingParameter(Name = "remainingQuestionsNumbers")]
    public int remainingQuestionsNumbers { get; set; }

    [Parameter]
    public EventCallback<Question> OnAnswerQuestion { get; set; }
    [Parameter]
    public EventCallback<GameState> OnStateIsSet { get; set; }
    private void QuestionAnswered(bool answer)
    {
        Question.Answer = answer;
        OnAnswerQuestion.InvokeAsync(Question);
    }
}
